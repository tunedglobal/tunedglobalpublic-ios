{"sections":[],"kind":"symbol","metadata":{"externalID":"c:@M@SocialRadio@objc(cs)AutomixIQ(im)addTrackWithIdentifier:metadata:contextType:contextId:index:completion:","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addTrack"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","kind":"typeIdentifier","text":"TunedTrackModel"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?)"}],"title":"addTrack(identifier:metadata:contextType:contextId:index:completion:)","role":"symbol","symbolKind":"method","modules":[{"name":"SocialRadio"}],"roleHeading":"Instance Method","navigatorTitle":[{"kind":"identifier","text":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addTrack"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","text":"TunedTrackModel"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"identifier","content":[{"inlineContent":[{"text":"The track identifier to be added.","type":"text"}],"type":"paragraph"}]},{"name":"metadata","content":[{"type":"paragraph","inlineContent":[{"text":"TunedTrackModel object you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifier metadata. Can be nil.","type":"text"}]}]},{"name":"contextType","content":[{"inlineContent":[{"text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc).","type":"text"}],"type":"paragraph"}]},{"name":"contextId","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The id of the source of these tracks, for logging purposes."}]}]},{"name":"index","content":[{"type":"paragraph","inlineContent":[{"text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room.","type":"text"}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Code to be executed upon completing the asynchronous request."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameter error: An error describing a problem that occurred, nil otherwise.","type":"text"}]}]}],"type":"unorderedList"}]}]}],"abstract":[{"text":"Adds a single track to the AutomixIQ playlist at a given index.","type":"text"},{"text":" ","type":"text"},{"text":"Returns an erorr if the index is out of bounds.","type":"text"}],"identifier":{"url":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTrack(identifier:metadata:contextType:contextId:index:completion:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/socialradio\/automixiq\/addtrack(identifier:metadata:contexttype:contextid:index:completion:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/socialradio\/automixiq\/addtrack(identifier:metadata:contexttype:contextid:index:completion:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ"]]},"references":{"doc://org.cocoapods.SocialRadio/documentation/SocialRadio":{"kind":"symbol","url":"\/documentation\/socialradio","role":"collection","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio","abstract":[{"type":"text","text":"Broadcast your playlist, mix, or voice to the world."}],"title":"SocialRadio","type":"topic"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ/addTrack(identifier:metadata:contextType:contextId:index:completion:)":{"type":"topic","url":"\/documentation\/socialradio\/automixiq\/addtrack(identifier:metadata:contexttype:contextid:index:completion:)","title":"addTrack(identifier:metadata:contextType:contextId:index:completion:)","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTrack(identifier:metadata:contextType:contextId:index:completion:)","role":"symbol","abstract":[{"text":"Adds a single track to the AutomixIQ playlist at a given index.","type":"text"},{"text":" ","type":"text"},{"text":"Returns an erorr if the index is out of bounds.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addTrack","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TunedTrackModel","kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel"},{"text":"?, ","kind":"text"},{"text":"contextType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"contextId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"index","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"navigatorTitle":[{"text":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/TunedTrackModel":{"navigatorTitle":[{"text":"TunedTrackModel","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","title":"TunedTrackModel","url":"\/documentation\/socialradio\/tunedtrackmodel","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TunedTrackModel","kind":"identifier"}],"abstract":[{"type":"text","text":"TunedTrackModel models a track. This metadata is required."}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ":{"type":"topic","url":"\/documentation\/socialradio\/automixiq","title":"AutomixIQ","kind":"symbol","abstract":[{"type":"text","text":"AutomixIQ represents the AutomixIQ SDK and exposes all its functionality. It follows a Singleton pattern."}],"navigatorTitle":[{"kind":"identifier","text":"AutomixIQ"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutomixIQ"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/metadata\/platforms","op":"add","value":null},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"path":"\/metadata\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:"}]},{"path":"\/topicSections","op":"add","value":null},{"path":"\/relationshipsSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"add","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"addTrackWithIdentifier:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSString","preciseIdentifier":"c:objc(cs)NSString","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"identifier","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"metadata:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TunedTrackModel","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"metadata","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextType:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSString","preciseIdentifier":"c:objc(cs)NSString","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"contextType","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextId:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","preciseIdentifier":"c:@T@int32_t","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"contextId","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"index:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","preciseIdentifier":"c:@T@int32_t","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"completion:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":" (^)(","kind":"text"},{"text":"NSError","preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier"},{"text":" * ","kind":"text"},{"text":"","kind":"internalParam"},{"text":")) ","kind":"text"},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}]}],"kind":"declarations"}},{"path":"\/primaryContentSections\/1","op":"replace","value":{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The track identifier to be added."}],"type":"paragraph"}],"name":"identifier"},{"content":[{"type":"paragraph","inlineContent":[{"text":"TunedTrackModel object you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifier metadata. Can be nil.","type":"text"}]}],"name":"metadata"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc)."}]}],"name":"contextType"},{"content":[{"inlineContent":[{"text":"The id of the source of these tracks, for logging purposes.","type":"text"}],"type":"paragraph"}],"name":"contextId"},{"content":[{"inlineContent":[{"text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room.","type":"text"}],"type":"paragraph"}],"name":"index"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Code to be executed upon completing the asynchronous request.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameter error: An error describing a problem that occurred, nil otherwise."}],"type":"paragraph"}]}]}],"name":"completion"}],"kind":"parameters"}},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTrack(identifier:metadata:contextType:contextId:index:completion:)\/title","op":"replace","value":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTrack(identifier:metadata:contextType:contextId:index:completion:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"addTrackWithIdentifier:metadata:contextType:contextId:index:completion:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/title","op":"replace","value":"TunedTrackModel"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/fragments","op":"replace","value":[{"text":"TunedTrackModel","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"TunedTrackModel"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/title","op":"replace","value":"AutomixIQ"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/fragments","op":"replace","value":[{"text":"AutomixIQ","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/navigatorTitle","op":"replace","value":[{"text":"AutomixIQ","kind":"identifier"}]}]}]}