{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/Initialising-SocialRadio-with-custom-audio-and-social-layer-article"},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/socialradio\/initialising-socialradio-with-custom-audio-and-social-layer-article"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/socialradio\/initialising-socialradio-with-custom-audio-and-social-layer-article"]}],"primaryContentSections":[{"content":[{"anchor":"Essentials","level":2,"type":"heading","text":"Essentials"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document explains how to integrate SocialRadio with your application if it gets its audio data, metadata and social layer from a custom backend."}]},{"anchor":"Initialization-with-custom-audio","level":3,"type":"heading","text":"Initialization with custom audio"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to initialise SocialRadio with custom audio you need the following:"}]},{"items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioTrackMetadataDelegate"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioStatusObserverDelegate","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AuthenticationDelegate"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tuned Global Store ID"}]}]},{"content":[{"inlineContent":[{"text":"Tuned Global Application ID","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Device Country Code","type":"text"}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["func application(_ application: UIApplication, ","                   didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","    \/\/ ...","","    let automixIQStreamingDelegate: AutomixIQStreamingDelegate = myAutomixIQStreamingDelegate","    let socialRadioTrackMetadataDelegate: SocialRadioTrackMetadataDelegate = mySocialRadioTrackMetadataDelegate","    let socialRadioUIDelegate: SocialRadioUIDelegate = mySocialRadioUIDelegate","    let socialRadioStatusObserverDelegate: SocialRadioStatusObserverDelegate = mySocialRadioStatusObserverDelegate","    let authenticationDelegate: AuthenticationDelegate = myTrackDataBackendAuthenticationDelegate","    let countryCode: String = myCountryCode \/\/ \"US\" ? \"AU\"?","    let storeId: String = myTunedStoreId","    let applicationId: String = myApplicationId","    let myAPIKey: String = myApplicationKey","","    let config = SocialRadioConfig(apiKey: myAPIKey, country: countryCode, storeId: storeId, applicationId: applicationId)","    SocialRadio.initialise(config: config","                           automixIQStreamingDelegate: automixIQStreamingDelegate,","                           socialRadioTrackMetadataDelegate: socialRadioTrackMetadataDelegate","                           socialRadioStatusDelegate: socialRadioStatusObserverDelegate,","                           socialRadioUIDelegate: socialRadioUIDelegate,","                           authenticationDelegate: authenticationDelegate)","    { error in","        if error != nil {","            \/\/ This means you are forbidden to use the Automix SDK or you have no internet connection.","            return","        }","        \/\/ The Automix SDK public functions can be used from this point onwards :)","    }","","    \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"text":"After initialising it, on the completion block, you can use SocialRadio’s singleton to get the Tuned Global’s implementation of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerDelegates","isActive":true},{"text":" to overwrite the module you are interested in with your own implementation, or provide your own ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerDelegates","isActive":true},{"text":". Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/tunedGlobalSocialLayerDelegates()","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After you are happy with your complete delegate set, you can set it onto SocialRadio’s singleton. Use "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/setSocialLayerDelegates(_:)","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["","    \/\/ ...","    let mySocialLayerDelegates = SocialRadio.instance.tunedGlobalSocialLayerDelegates()","    mySocialLayerDelegates.mixtapeCommentsDelegate = nil                    \/\/ If you are not interested in this module","    mySocialLayerDelegates.mixtapeLikesDelegate = myMixtapeLikesDelegate    \/\/ For a custom implementation of the delegate","    \/\/ ...","    SocialRadio.instance.setSocialLayerDelegates(mySocialLayerDelegates)","    \/\/ ...",""]},{"type":"paragraph","inlineContent":[{"text":"Please refer to each module’s delegation for details:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerAuthenticationDelegate","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerLiveMixtapeDelegate"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerUserDelegate","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeBackgroundsDelegate","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeCommentsDelegate","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeLikesDelegate","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerModerationDelegate","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerNotificationsDelegate","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerTrackLikesDelegate","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"You can also tweak the SocialRadio UI and available feature set by changing flags on the config object. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioConfig"},{"type":"text","text":"."}],"type":"paragraph"},{"level":4,"anchor":"AutomixIQStreamingDelegate","text":"AutomixIQStreamingDelegate","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"If your custom backend puts fetching metadata and track data behind a login, SocialRadio needs to know if the user in your application is logged in or not via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/isLoggedIn()"}],"type":"paragraph"}]}]},{"code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func isLoggedIn() {","        return self.loggedIn","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If your custom backend only allows playback on a device under certain conditions (for instance it only allows one device to play at any given time), SocialRadio needs to know if a device is allowed to play via"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncCheckDeviceStatus(completion:)","type":"reference","isActive":true}],"type":"paragraph"}]}]},{"code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func asyncCheckDeviceStatus(completion: @escaping (_ error: Error?, _ canContinuePlaying: Bool) -> Void) {","        self.canDeviceContinuePlaying() { allowedToPlay in","            return allowedToPlay","        }","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"SocialRadio requires devices to have a unique identifier, provided via","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/getDeviceIdentifier()","isActive":true,"type":"reference"}]}]}]},{"code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func getDeviceIdentifier() -> String {","        return self.deviceIdentifier","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"This provides hooks to inject cached track audio data and metadata, preventing SocialRadio from having to request this data from your custom backend if they are already available. This also enables offline playback when all required data is available on the device","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"This is done via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/syncGetTrackMetadata(trackId:)"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func syncGetTrackMetadata(trackId: String?) -> TunedTrackModel? {","        \/\/ If I have this track cached, I should be able to tell its metadata","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.metadataForTrack(trackId)","    }","    \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/syncGetCachedTrack(trackId:)","isActive":true}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func syncGetCachedTrack(trackId: String) -> Data? {","        \/\/ If I have this track cached, I should be able to decrypt it and send the data","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.unencryptedDataForTrack(trackId)","    }","    \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SocialRadio will pass every track metadata model it may have downloaded to the client to provide an opportunity to cache it. If you do not need this, you may leave this function empty."},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/cacheMetadata(_:)","isActive":true}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func cacheMetadata(_ metadata: [TunedTrackModel]) -> Data? {","        self.metadataForTrack[metadata.trackId] = metadata","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"SocialRadio will download track metadata as it needs it. When required, it will do so via"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncGetTrackMetadata(trackId:completion:)"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func asyncGetTrackMetadata(trackId: String, completion: @escaping (_ error: Error?, _ track: TunedTrackModel?) -> Void) {","        self.getTrackMetadata(trackId: trackId) { error, trackMetadata in","            let automixIQTrackModel = translateMetadata(trackMetadata)","            return completion(error, automixIQTrackModel)","        }","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"When SocialRadio needs to download a track, it will ask for the url for it. It supports session IDs if you want urls to expire and return 403s. It will do so via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func asyncGetStream(streamingDeviceId: String, sessionId: String, trackId: String, completion: @escaping (_ error: Error?, _ url: String?, _ newSessionId: String?, _ reportingURLS: Beacons?) -> Void) {","        self.getTrackURL(deviceId: streamingDeviceId, sessionId: sessionId, trackId: trackId) { error, url in ","            return completion(error, url)","        }","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When a track finishes downloading, SocialRadio will pass the audio data for you to cache if required. This is done via"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/trackDownloadCompleted(trackId:data:)"}]}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func trackDownloadCompleted(trackId: String, data: NSData) {","        self.cacheTrack(trackId: trackId, data: data)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"As a track is being downloaded, SocialRadio will report download progress via","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/trackDownloadProgressChanged(trackId:progress:)","isActive":true,"type":"reference"}]}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyAutomixIQStreamingDelegate: NSObject, AutomixIQStreamingDelegate {","    \/\/ ...","    public func trackDownloadProgressChanged(trackId: String, progress: Swift.Float) {","        self.updateTrackDownloadProgress(trackId: trackId, progress: progress)","    }","    \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do keep in mind this download is done lazily, as SocialRadio requires data for analysis \/ playback. There is no guarantee a track will download in its entirety if the track is not played in its entirety."}]},{"type":"heading","level":4,"anchor":"SocialRadioTrackMetadataDelegate","text":"SocialRadioTrackMetadataDelegate"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioTrackMetadataDelegate","isActive":true},{"text":" is responsible for getting artwork for tracks, and track recommendations:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"SocialRadio will ask you for the URL to a provider of artwork given track Ids:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioTrackMetadataDelegate: NSObject, SocialRadioTrackMetadataDelegate {","    \/\/ ...","    func asyncGetThumborLocation(completion: @escaping(_ url: String?) -> Void) -> Void {","        return self.imageGenerationURL","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"SocialRadio will ask for track recommendations for a given track:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioTrackMetadataDelegate: NSObject, SocialRadioTrackMetadataDelegate {","    \/\/ ...","    func asyncGetTrackRecommendations(identifiers: [String],","                                      contextIds: [String]?,","                                      limit: Int, completion: @escaping(_ tracks: [TunedTrackModel]?) -> Void) -> Void {","        return completion(self.trackRecommendations(identifiers)","    }","    \/\/ ...","}"]},{"type":"heading","level":4,"anchor":"SocialRadioUIDelegate","text":"SocialRadioUIDelegate"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate","isActive":true,"type":"reference"},{"type":"text","text":" is responsible for providing data required for the Radio UI to function, as well as presenting UI SocialRadio is not able to do on its own."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SocialRadio allows the user to add one or multiple tracks to a radio show. When that action is triggered, SocialRadio asks this delegate to provide the UI for selecting them. This is done via "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentTracklist(filterOutExplicitContent:completion:)","isActive":true}]}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioUIDelegate: NSObject, SocialRadioUIDelegate {","    \/\/ ...","    func presentTracklist(filterOutExplicitContent: Bool,","                          completion: @escaping (_ tracks: [TunedTrackModel]?,","                                                 _ contextType: String?, _ contextId: Int,","                                                 _ playlistName: String?) -> Void) {","        \/\/ Your implementation for presenting UI that allows to select one or more tracks:","        let tracklist = MyTracklist() { tracks, playlistName in","            \/\/ - Feed the track\/tracks selected as the second paramenter of the completion block,","            \/\/ - If the tracks selected are part of a playlist, feed the name opf that playlist as the thirsd parameter of the completion block.","            completion(tracks, playlistName)","        }","        self.present(filterOutExplicitContent, tracklist, animated: true)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"At a time where SocialRadio requires a Tuned User Id, if it does not have one it will require the user to authenticate via "},{"isActive":true,"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentAuthentication(completion:)","type":"reference"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioUIDelegate: NSObject, SocialRadioUIDelegate {","    \/\/ ...","    func presentAuthentication(completion: @escaping (_ success: Bool) -> Void) {","        \/\/ Present your login here","        let authenticationDialog = MyAuthenticationDialog() { success in","            completion(success)","        }","        self.present(authenticationDialog, animated: true)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"At times, SocialRadio will need to present a users’ profile. It will do so via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentProfile(identifier:completion:)"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioUIDelegate: NSObject, SocialRadioUIDelegate {","    \/\/ ...","    func presentProfile(identifier: String?, completion: @escaping () -> Void) {","        \/\/ Present the user profile here","        let profileDialog = MyProfileDialog(identifier: identifier) {","            completion()","        }","        self.present(profileDialog, animated: true)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"SocialRadio also notifies this delegate when it will and has minimised the Radio UI, and when it will and has closed the Radio UI. It does so via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/willDismissRadioUI(userInitiated:)"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/didDismissRadioUI(userInitiated:)"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/willCloseRadioUI(userInitiated:)"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/didCloseRadioUI(userInitiated:)"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MySocialRadioUIDelegate: NSObject, SocialRadioUIDelegate {","    \/\/ ...","    func willDismissRadioUI(userInitiated: Boolean) -> Void {","        return","    }","    ","    func didDismissRadioUI(userInitiated: Boolean) -> Void {","        return","    }","    ","    func willCloseRadioUI(userInitiated: Boolean) -> Void {","        return","    }","    ","    func didCloseRadioUI(userInitiated: Boolean) -> Void {","        return","    }","    \/\/ ...","}"]},{"type":"heading","level":4,"anchor":"SocialRadioStatusObserverDelegate","text":"SocialRadioStatusObserverDelegate"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioStatusObserverDelegate","isActive":true},{"type":"text","text":" is responsible for updating your player’s UI."}]},{"type":"heading","level":4,"anchor":"AuthenticationDelegate","text":"AuthenticationDelegate"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AuthenticationDelegate","isActive":true,"type":"reference"},{"text":" is responsible for fetching and refreshing your custom audio backend’s credentials:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SocialRadio will ask you to refresh your custom audio backend’s credentials should they have expired:"}]}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyAuthenticationDelegate: NSObject, AuthenticationDelegate {","    func refreshCredentials(oldAccessToken: String?, refreshToken: String?, tokenType: String?,","                                completion: @escaping (_ error: Error?,","                                                       _ credentials: SocialRadioCredentials?) -> Void) {","        self.refreshCredentials(completion)","    }","}"]},{"type":"heading","level":3,"anchor":"Checking-if-SocialRadio-is-initialised","text":"Checking if SocialRadio is initialised"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To check wether AutomixIQ is currently initialised, use"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/initialised()","isActive":true}],"type":"paragraph"}]}]}],"kind":"content"}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AuthenticationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioStatusObserverDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioTrackMetadataDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerDelegates","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerAuthenticationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerLiveMixtapeDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerUserDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeBackgroundsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeCommentsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeLikesDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerModerationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerNotificationsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerTrackLikesDelegate"],"anchor":"Initialising-SocialRadio-for-use-with-custom-audio-and-custom-social-layer","generated":true,"title":"Initialising SocialRadio for use with custom audio and custom social layer"}],"abstract":[{"type":"text","text":"How to validate your client and start using the SocialRadio SDK with custom audio track data and custom social layer."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"article","title":"Initializing SocialRadio with custom audio and social layer","roleHeading":"Article","modules":[{"name":"SocialRadio"}]},"references":{"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/presentAuthentication(completion:)":{"kind":"symbol","url":"\/documentation\/socialradio\/socialradiouidelegate\/presentauthentication(completion:)","type":"topic","title":"presentAuthentication(completion:)","required":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"presentAuthenticationWithCompletion:"}],"abstract":[{"type":"text","text":"Called by SocialRadio when it wishes to present UI to authenticate a user"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentAuthentication"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"success"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentAuthentication(completion:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/cacheMetadata(_:)":{"type":"topic","url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/cachemetadata(_:)","required":true,"abstract":[{"type":"text","text":"AutomixIQ calls this function to provide a chance to cache metadata to shortcut future requests."}],"kind":"symbol","title":"cacheMetadata(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheMetadata"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","text":"TunedTrackModel"},{"kind":"text","text":"])"}],"navigatorTitle":[{"kind":"identifier","text":"cacheMetadata:"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/cacheMetadata(_:)","role":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadio/setSocialLayerDelegates(_:)":{"url":"\/documentation\/socialradio\/socialradio\/setsociallayerdelegates(_:)","abstract":[{"text":"Sets the Social Layer delegates","type":"text"}],"title":"setSocialLayerDelegates(_:)","type":"topic","role":"symbol","navigatorTitle":[{"text":"setSocialLayerDelegates:","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/setSocialLayerDelegates(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setSocialLayerDelegates","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SocialLayerDelegates","kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)SocialLayerDelegates"},{"text":"?)","kind":"text"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/presentTracklist(filterOutExplicitContent:completion:)":{"kind":"symbol","url":"\/documentation\/socialradio\/socialradiouidelegate\/presenttracklist(filteroutexplicitcontent:completion:)","type":"topic","title":"presentTracklist(filterOutExplicitContent:completion:)","required":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"presentTracklistWithFilterOutExplicitContent:completion:"}],"abstract":[{"text":"Called by SocialRadio when it wishes to present UI to select one or many tracks","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentTracklist"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filterOutExplicitContent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"tracks"},{"kind":"text","text":": ["},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","kind":"typeIdentifier","text":"TunedTrackModel"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"contextType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"contextId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"playlistName"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentTracklist(filterOutExplicitContent:completion:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerMixtapeBackgroundsDelegate":{"title":"SocialLayerMixtapeBackgroundsDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocialLayerMixtapeBackgroundsDelegate"}],"kind":"symbol","abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding mixtape backgrounds.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SocialLayerMixtapeBackgroundsDelegate"}],"type":"topic","url":"\/documentation\/socialradio\/sociallayermixtapebackgroundsdelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeBackgroundsDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioTrackMetadataDelegate":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SocialRadioTrackMetadataDelegate","kind":"identifier"}],"title":"SocialRadioTrackMetadataDelegate","navigatorTitle":[{"text":"SocialRadioTrackMetadataDelegate","kind":"identifier"}],"url":"\/documentation\/socialradio\/socialradiotrackmetadatadelegate","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Handles track recommendations and artwork"}],"role":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioTrackMetadataDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/trackDownloadProgressChanged(trackId:progress:)":{"title":"trackDownloadProgressChanged(trackId:progress:)","type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/trackDownloadProgressChanged(trackId:progress:)","abstract":[{"type":"text","text":"Called by AutomixIQ when a track download progress has changed."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"trackDownloadProgressChangedWithTrackId:progress:"}],"required":true,"url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/trackdownloadprogresschanged(trackid:progress:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trackDownloadProgressChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"progress"},{"kind":"text","text":": Swift"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sf","kind":"typeIdentifier","text":"Float"},{"kind":"text","text":")"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadio/initialised()":{"abstract":[{"text":"Returns the initialised status of the Automix SDK.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/socialradio\/socialradio\/initialised()","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/initialised()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initialised","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"initialised()","role":"symbol","navigatorTitle":[{"text":"initialised","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/didCloseRadioUI(userInitiated:)":{"abstract":[{"text":"Called by SocialRadio when the Radio UI is closed","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/didCloseRadioUI(userInitiated:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didCloseRadioUI","kind":"identifier"},{"text":"(","kind":"text"},{"text":"userInitiated","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true,"title":"didCloseRadioUI(userInitiated:)","navigatorTitle":[{"kind":"identifier","text":"didCloseRadioUIWithUserInitiated:"}],"url":"\/documentation\/socialradio\/socialradiouidelegate\/didcloseradioui(userinitiated:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerNotificationsDelegate":{"url":"\/documentation\/socialradio\/sociallayernotificationsdelegate","navigatorTitle":[{"text":"SocialLayerNotificationsDelegate","kind":"identifier"}],"title":"SocialLayerNotificationsDelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerNotificationsDelegate","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerNotificationsDelegate","kind":"identifier"}],"abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding notifications.","type":"text"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AuthenticationDelegate":{"url":"\/documentation\/socialradio\/authenticationdelegate","kind":"symbol","type":"topic","title":"AuthenticationDelegate","abstract":[{"text":"Handles handoff of authentication tokens","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticationDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"AuthenticationDelegate","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AuthenticationDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerAuthenticationDelegate":{"role":"symbol","abstract":[{"type":"text","text":"(Required) Handles communication between SocialRadio SDK and a backend regarding authentication"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"SocialLayerAuthenticationDelegate","kind":"identifier"}],"title":"SocialLayerAuthenticationDelegate","url":"\/documentation\/socialradio\/sociallayerauthenticationdelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerAuthenticationDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerAuthenticationDelegate","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerUserDelegate":{"abstract":[{"text":"(Required) Handles communication between SocialRadio SDK and a backend regarding  users.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocialLayerUserDelegate"}],"url":"\/documentation\/socialradio\/sociallayeruserdelegate","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SocialLayerUserDelegate"}],"role":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerUserDelegate","title":"SocialLayerUserDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/didDismissRadioUI(userInitiated:)":{"abstract":[{"text":"Called by SocialRadio when the Radio UI is dismissed","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didDismissRadioUI","kind":"identifier"},{"text":"(","kind":"text"},{"text":"userInitiated","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/didDismissRadioUI(userInitiated:)","title":"didDismissRadioUI(userInitiated:)","url":"\/documentation\/socialradio\/socialradiouidelegate\/diddismissradioui(userinitiated:)","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"didDismissRadioUIWithUserInitiated:","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/asyncGetTrackMetadata(trackId:completion:)":{"navigatorTitle":[{"text":"asyncGetTrackMetadataWithTrackId:completion:","kind":"identifier"}],"role":"symbol","required":true,"type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncGetTrackMetadata(trackId:completion:)","title":"asyncGetTrackMetadata(trackId:completion:)","url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/asyncgettrackmetadata(trackid:completion:)","kind":"symbol","abstract":[{"type":"text","text":"Called by AutomixIQ when it requires the metadata of a track in order to load it."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncGetTrackMetadata","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"track","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"TunedTrackModel","kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate":{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate","role":"symbol","title":"SocialRadioUIDelegate","kind":"symbol","url":"\/documentation\/socialradio\/socialradiouidelegate","navigatorTitle":[{"text":"SocialRadioUIDelegate","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialRadioUIDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"SocialRadioUIDelegate protocol defines the methods to be implemented by a class tasked with providing the Automix SDK the user interface requires for social features."}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerMixtapeCommentsDelegate":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerMixtapeCommentsDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"SocialLayerMixtapeCommentsDelegate","kind":"identifier"}],"title":"SocialLayerMixtapeCommentsDelegate","role":"symbol","abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding commenting a mixtape.","type":"text"}],"type":"topic","url":"\/documentation\/socialradio\/sociallayermixtapecommentsdelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeCommentsDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/asyncCheckDeviceStatus(completion:)":{"type":"topic","required":true,"navigatorTitle":[{"text":"asyncCheckDeviceStatusWithCompletion:","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncCheckDeviceStatus(completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncCheckDeviceStatus","kind":"identifier"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"canContinuePlaying","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"asyncCheckDeviceStatus(completion:)","url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/asynccheckdevicestatus(completion:)","abstract":[{"type":"text","text":"Called by AutomixIQ regularly while something is being played, this can be used if you have restrictions on the number of devices that can play simultaneously"}],"role":"symbol","kind":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate":{"abstract":[{"type":"text","text":"AutomixIQStreamingDelegate protocol defines the methods to be implemented with providing AutomixIQ the information it requires to play content."}],"type":"topic","navigatorTitle":[{"text":"AutomixIQStreamingDelegate","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/socialradio\/automixiqstreamingdelegate","title":"AutomixIQStreamingDelegate","role":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQStreamingDelegate","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/presentProfile(identifier:completion:)":{"kind":"symbol","url":"\/documentation\/socialradio\/socialradiouidelegate\/presentprofile(identifier:completion:)","type":"topic","title":"presentProfile(identifier:completion:)","required":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"presentProfileWithIdentifier:completion:"}],"abstract":[{"text":"Called by SocialRadio when it wishes to present UI with a user’s information","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"presentProfile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/presentProfile(identifier:completion:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerModerationDelegate":{"title":"SocialLayerModerationDelegate","url":"\/documentation\/socialradio\/sociallayermoderationdelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerModerationDelegate","abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding content moderation.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerModerationDelegate","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"SocialLayerModerationDelegate","kind":"identifier"}],"kind":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioConfig":{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioConfig","navigatorTitle":[{"kind":"identifier","text":"SocialRadioConfig"}],"abstract":[{"text":"SocialRadioConfig holds the variables to initialise SocialRadio and describe the desired feature set and UI","type":"text"}],"kind":"symbol","url":"\/documentation\/socialradio\/socialradioconfig","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocialRadioConfig"}],"role":"symbol","type":"topic","title":"SocialRadioConfig"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/willDismissRadioUI(userInitiated:)":{"url":"\/documentation\/socialradio\/socialradiouidelegate\/willdismissradioui(userinitiated:)","role":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/willDismissRadioUI(userInitiated:)","type":"topic","abstract":[{"text":"Called by SocialRadio when the Radio UI about to be dismissed","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"willDismissRadioUI","kind":"identifier"},{"text":"(","kind":"text"},{"text":"userInitiated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"navigatorTitle":[{"text":"willDismissRadioUIWithUserInitiated:","kind":"identifier"}],"required":true,"kind":"symbol","title":"willDismissRadioUI(userInitiated:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerDelegates":{"navigatorTitle":[{"kind":"identifier","text":"SocialLayerDelegates"}],"type":"topic","url":"\/documentation\/socialradio\/sociallayerdelegates","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerDelegates","title":"SocialLayerDelegates","abstract":[{"text":"SocialLayerDelegates is an object that holds all delegates used to communicate between the SocialRadio SDK and a backend that handles storage of social interactions.","type":"text"},{"text":" ","type":"text"},{"text":"‘authenticationDelegate’, ‘userDelegate’ and ‘liveMixtapeDelegate’ are required always. Every other delegate can be nil and is only required if your backend and SocialRadio implementation supports the attached features, like commenting, moderation, backgrounds, etc.","type":"text"},{"text":" ","type":"text"},{"text":"See each delegate’s documentation for details.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocialLayerDelegates"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerTrackLikesDelegate":{"url":"\/documentation\/socialradio\/sociallayertracklikesdelegate","navigatorTitle":[{"text":"SocialLayerTrackLikesDelegate","kind":"identifier"}],"title":"SocialLayerTrackLikesDelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerTrackLikesDelegate","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerTrackLikesDelegate","kind":"identifier"}],"abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding liking and unliking a track.","type":"text"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio":{"abstract":[{"text":"Broadcast your playlist, mix, or voice to the world.","type":"text"}],"type":"topic","kind":"symbol","title":"SocialRadio","role":"collection","url":"\/documentation\/socialradio","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/trackDownloadCompleted(trackId:data:)":{"required":true,"role":"symbol","abstract":[{"type":"text","text":"Called by AutomixIQ when a track has been fully downloaded. This can be used to cache the track locally on the user’s device."}],"url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/trackdownloadcompleted(trackid:data:)","title":"trackDownloadCompleted(trackId:data:)","kind":"symbol","type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/trackDownloadCompleted(trackId:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trackDownloadCompleted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"kind":"text","text":")"}],"navigatorTitle":[{"kind":"identifier","text":"trackDownloadCompletedWithTrackId:data:"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/syncGetTrackMetadata(trackId:)":{"navigatorTitle":[{"text":"syncGetTrackMetadataWithTrackId:","kind":"identifier"}],"url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/syncgettrackmetadata(trackid:)","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/syncGetTrackMetadata(trackId:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncGetTrackMetadata","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","text":"TunedTrackModel","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","required":true,"abstract":[{"type":"text","text":"Called by AutomixIQ before attempting to download a tracks metadata to allow the client to provide any cached metadata, return nil if not available."}],"title":"syncGetTrackMetadata(trackId:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/syncGetCachedTrack(trackId:)":{"navigatorTitle":[{"kind":"identifier","text":"syncGetCachedTrackWithTrackId:"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncGetCachedTrack"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/syncGetCachedTrack(trackId:)","title":"syncGetCachedTrack(trackId:)","kind":"symbol","required":true,"role":"symbol","abstract":[{"text":"Called by AutomixIQ before attempting to download a track to allow the client to provide any cached track data, return nil if not available.","type":"text"}],"url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/syncgetcachedtrack(trackid:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioStatusObserverDelegate":{"navigatorTitle":[{"kind":"identifier","text":"SocialRadioStatusObserverDelegate"}],"kind":"symbol","url":"\/documentation\/socialradio\/socialradiostatusobserverdelegate","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioStatusObserverDelegate","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocialRadioStatusObserverDelegate"}],"abstract":[],"title":"SocialRadioStatusObserverDelegate"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadioUIDelegate/willCloseRadioUI(userInitiated:)":{"abstract":[{"type":"text","text":"Called by SocialRadio when the Radio UI is closed"}],"type":"topic","required":true,"title":"willCloseRadioUI(userInitiated:)","navigatorTitle":[{"kind":"identifier","text":"willCloseRadioUIWithUserInitiated:"}],"kind":"symbol","url":"\/documentation\/socialradio\/socialradiouidelegate\/willcloseradioui(userinitiated:)","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate\/willCloseRadioUI(userInitiated:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willCloseRadioUI"},{"kind":"text","text":"("},{"kind":"externalParam","text":"userInitiated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/isLoggedIn()":{"required":true,"navigatorTitle":[{"text":"isLoggedIn","kind":"identifier"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isLoggedIn","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/isloggedin()","kind":"symbol","abstract":[{"text":"Called by AutomixIQ to learn if it is allowed to stream content that is protected by some form of authentication.","type":"text"},{"text":" ","type":"text"},{"text":"An example is, an implementation via an API behind OAuth would return true if access and refresh tokens are available, false otherwise","type":"text"}],"title":"isLoggedIn()","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/isLoggedIn()","role":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/getDeviceIdentifier()":{"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/getDeviceIdentifier()","required":true,"role":"symbol","title":"getDeviceIdentifier()","url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/getdeviceidentifier()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDeviceIdentifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"getDeviceIdentifier"}],"abstract":[{"type":"text","text":"Called by Automix to learn the identity of the device requesting to stream audio, for those services that require it."},{"type":"text","text":" "},{"type":"text","text":"An example would be, a service that only allows one device to stream at any one time, would need to know the identity of the device to provide the stream."}],"type":"topic"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialRadio/tunedGlobalSocialLayerDelegates()":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"tunedGlobalSocialLayerDelegates"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadio\/tunedGlobalSocialLayerDelegates()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tunedGlobalSocialLayerDelegates"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)SocialLayerDelegates","kind":"typeIdentifier","text":"SocialLayerDelegates"},{"kind":"text","text":"?"}],"role":"symbol","title":"tunedGlobalSocialLayerDelegates()","url":"\/documentation\/socialradio\/socialradio\/tunedglobalsociallayerdelegates()","abstract":[{"text":"Gets the Tuned Global’s backend implementation of the Social Layer delegates","type":"text"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQStreamingDelegate/asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)":{"title":"asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate\/asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncGetStream","kind":"identifier"},{"text":"(","kind":"text"},{"text":"streamingDeviceId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sessionId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newSessionId","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"asyncGetStreamWithStreamingDeviceId:sessionId:trackId:completion:","kind":"identifier"}],"abstract":[{"text":"Called by AutomixIQ to obtain the URL to stream audio from, a sessionId if the URL is to be salted with one, and the URL to report playback events if required.","type":"text"}],"url":"\/documentation\/socialradio\/automixiqstreamingdelegate\/asyncgetstream(streamingdeviceid:sessionid:trackid:completion:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerLiveMixtapeDelegate":{"navigatorTitle":[{"text":"SocialLayerLiveMixtapeDelegate","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerLiveMixtapeDelegate","kind":"identifier"}],"title":"SocialLayerLiveMixtapeDelegate","url":"\/documentation\/socialradio\/sociallayerlivemixtapedelegate","abstract":[{"type":"text","text":"(Required) Handles communication between SocialRadio SDK and a backend regarding live mixtapes."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerLiveMixtapeDelegate","role":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/SocialLayerMixtapeLikesDelegate":{"navigatorTitle":[{"text":"SocialLayerMixtapeLikesDelegate","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocialLayerMixtapeLikesDelegate","kind":"identifier"}],"title":"SocialLayerMixtapeLikesDelegate","url":"\/documentation\/socialradio\/sociallayermixtapelikesdelegate","abstract":[{"text":"Handles communication between SocialRadio SDK and a backend regarding liking and unliking a mixtape.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeLikesDelegate","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"replace","value":[{"generated":true,"anchor":"Initialising-SocialRadio-for-use-with-custom-audio-and-custom-social-layer","title":"Initialising SocialRadio for use with custom audio and custom social layer","identifiers":["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQStreamingDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AuthenticationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioStatusObserverDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioTrackMetadataDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialRadioUIDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerDelegates","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerAuthenticationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerLiveMixtapeDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerUserDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeBackgroundsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeCommentsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerMixtapeLikesDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerModerationDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerNotificationsDelegate","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/SocialLayerTrackLikesDelegate"]}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentAuthentication(completion:)\/title","op":"replace","value":"presentAuthenticationWithCompletion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentAuthentication(completion:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"presentAuthenticationWithCompletion:"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1cacheMetadata(_:)\/title","op":"replace","value":"cacheMetadata:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1cacheMetadata(_:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"cacheMetadata:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1setSocialLayerDelegates(_:)\/title","op":"replace","value":"setSocialLayerDelegates:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1setSocialLayerDelegates(_:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setSocialLayerDelegates:"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentTracklist(filterOutExplicitContent:completion:)\/title","op":"replace","value":"presentTracklistWithFilterOutExplicitContent:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentTracklist(filterOutExplicitContent:completion:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"presentTracklistWithFilterOutExplicitContent:completion:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeBackgroundsDelegate\/title","op":"replace","value":"SocialLayerMixtapeBackgroundsDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeBackgroundsDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerMixtapeBackgroundsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeBackgroundsDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerMixtapeBackgroundsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioTrackMetadataDelegate\/title","op":"replace","value":"SocialRadioTrackMetadataDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioTrackMetadataDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialRadioTrackMetadataDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioTrackMetadataDelegate\/navigatorTitle","op":"replace","value":[{"text":"SocialRadioTrackMetadataDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1trackDownloadProgressChanged(trackId:progress:)\/title","op":"replace","value":"trackDownloadProgressChangedWithTrackId:progress:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1trackDownloadProgressChanged(trackId:progress:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"trackDownloadProgressChangedWithTrackId:progress:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1initialised()\/title","op":"replace","value":"initialised"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1initialised()\/fragments","op":"replace","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"initialised"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1didCloseRadioUI(userInitiated:)\/title","op":"replace","value":"didCloseRadioUIWithUserInitiated:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1didCloseRadioUI(userInitiated:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"didCloseRadioUIWithUserInitiated:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerNotificationsDelegate\/title","op":"replace","value":"SocialLayerNotificationsDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerNotificationsDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerNotificationsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerNotificationsDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerNotificationsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AuthenticationDelegate\/title","op":"replace","value":"AuthenticationDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AuthenticationDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"AuthenticationDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AuthenticationDelegate\/navigatorTitle","op":"replace","value":[{"text":"AuthenticationDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerAuthenticationDelegate\/title","op":"replace","value":"SocialLayerAuthenticationDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerAuthenticationDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerAuthenticationDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerAuthenticationDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerAuthenticationDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerUserDelegate\/title","op":"replace","value":"SocialLayerUserDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerUserDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerUserDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerUserDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerUserDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1didDismissRadioUI(userInitiated:)\/title","op":"replace","value":"didDismissRadioUIWithUserInitiated:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1didDismissRadioUI(userInitiated:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"didDismissRadioUIWithUserInitiated:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncGetTrackMetadata(trackId:completion:)\/title","op":"replace","value":"asyncGetTrackMetadataWithTrackId:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncGetTrackMetadata(trackId:completion:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"asyncGetTrackMetadataWithTrackId:completion:"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate\/title","op":"replace","value":"SocialRadioUIDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate\/fragments","op":"replace","value":[{"text":"SocialRadioUIDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialRadioUIDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeCommentsDelegate\/title","op":"replace","value":"SocialLayerMixtapeCommentsDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeCommentsDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerMixtapeCommentsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeCommentsDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerMixtapeCommentsDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncCheckDeviceStatus(completion:)\/title","op":"replace","value":"asyncCheckDeviceStatusWithCompletion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncCheckDeviceStatus(completion:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"asyncCheckDeviceStatusWithCompletion:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate\/title","op":"replace","value":"AutomixIQStreamingDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"AutomixIQStreamingDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"AutomixIQStreamingDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentProfile(identifier:completion:)\/title","op":"replace","value":"presentProfileWithIdentifier:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1presentProfile(identifier:completion:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"presentProfileWithIdentifier:completion:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerModerationDelegate\/title","op":"replace","value":"SocialLayerModerationDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerModerationDelegate\/fragments","op":"replace","value":[{"text":"SocialLayerModerationDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerModerationDelegate\/navigatorTitle","op":"replace","value":[{"text":"SocialLayerModerationDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioConfig\/title","op":"replace","value":"SocialRadioConfig"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioConfig\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialRadioConfig"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioConfig\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialRadioConfig"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1willDismissRadioUI(userInitiated:)\/title","op":"replace","value":"willDismissRadioUIWithUserInitiated:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1willDismissRadioUI(userInitiated:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"willDismissRadioUIWithUserInitiated:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerDelegates\/title","op":"replace","value":"SocialLayerDelegates"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerDelegates\/fragments","op":"replace","value":[{"text":"SocialLayerDelegates","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerDelegates\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerDelegates"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerTrackLikesDelegate\/title","op":"replace","value":"SocialLayerTrackLikesDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerTrackLikesDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialLayerTrackLikesDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerTrackLikesDelegate\/navigatorTitle","op":"replace","value":[{"text":"SocialLayerTrackLikesDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1trackDownloadCompleted(trackId:data:)\/title","op":"replace","value":"trackDownloadCompletedWithTrackId:data:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1trackDownloadCompleted(trackId:data:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"trackDownloadCompletedWithTrackId:data:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1syncGetTrackMetadata(trackId:)\/title","op":"replace","value":"syncGetTrackMetadataWithTrackId:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1syncGetTrackMetadata(trackId:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"syncGetTrackMetadataWithTrackId:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1syncGetCachedTrack(trackId:)\/title","op":"replace","value":"syncGetCachedTrackWithTrackId:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1syncGetCachedTrack(trackId:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"syncGetCachedTrackWithTrackId:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioStatusObserverDelegate\/title","op":"replace","value":"SocialRadioStatusObserverDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioStatusObserverDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"SocialRadioStatusObserverDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioStatusObserverDelegate\/navigatorTitle","op":"replace","value":[{"text":"SocialRadioStatusObserverDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1willCloseRadioUI(userInitiated:)\/title","op":"replace","value":"willCloseRadioUIWithUserInitiated:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadioUIDelegate~1willCloseRadioUI(userInitiated:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"willCloseRadioUIWithUserInitiated:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1isLoggedIn()\/title","op":"replace","value":"isLoggedIn"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1isLoggedIn()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"isLoggedIn"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1getDeviceIdentifier()\/title","op":"replace","value":"getDeviceIdentifier"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1getDeviceIdentifier()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getDeviceIdentifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1tunedGlobalSocialLayerDelegates()\/title","op":"replace","value":"tunedGlobalSocialLayerDelegates"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialRadio~1tunedGlobalSocialLayerDelegates()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"tunedGlobalSocialLayerDelegates"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)\/title","op":"replace","value":"asyncGetStreamWithStreamingDeviceId:sessionId:trackId:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQStreamingDelegate~1asyncGetStream(streamingDeviceId:sessionId:trackId:completion:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"asyncGetStreamWithStreamingDeviceId:sessionId:trackId:completion:"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerLiveMixtapeDelegate\/title","op":"replace","value":"SocialLayerLiveMixtapeDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerLiveMixtapeDelegate\/fragments","op":"replace","value":[{"text":"SocialLayerLiveMixtapeDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerLiveMixtapeDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"SocialLayerLiveMixtapeDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeLikesDelegate\/title","op":"replace","value":"SocialLayerMixtapeLikesDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeLikesDelegate\/fragments","op":"replace","value":[{"text":"SocialLayerMixtapeLikesDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1SocialLayerMixtapeLikesDelegate\/navigatorTitle","op":"replace","value":[{"text":"SocialLayerMixtapeLikesDelegate","kind":"identifier"}]}]}]}