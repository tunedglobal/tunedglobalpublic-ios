{"abstract":[{"type":"text","text":"Adds additional tracks to the playlist in AutomixIQ at a given index."},{"type":"text","text":" "},{"type":"text","text":"Returns an erorr if the index is out of bounds."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addTracks"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifiers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": ["},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","kind":"typeIdentifier","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","text":"TunedTrackModel"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"contextType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?)"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The list of track identifiers to add."}]}],"name":"identifiers"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of TunedTrackModel objects you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifiers metadata. Can be nil."}]}],"name":"metadata"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc).","type":"text"}]}],"name":"contextType"},{"content":[{"inlineContent":[{"text":"The id of the source of these tracks, for logging purposes.","type":"text"}],"type":"paragraph"}],"name":"contextId"},{"content":[{"inlineContent":[{"type":"text","text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room."}],"type":"paragraph"}],"name":"index"},{"content":[{"inlineContent":[{"type":"text","text":"Code to be executed upon completing the asynchronous request."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameter error: An error describing a problem that occurred, nil otherwise."}]}]}],"type":"unorderedList"}],"name":"completion"}],"kind":"parameters"}],"variants":[{"paths":["\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTracks(identifiers:metadata:contextType:contextId:index:completion:)"},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"navigatorTitle":[{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"externalID":"c:@M@SocialRadio@objc(cs)AutomixIQ(im)addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","roleHeading":"Instance Method","modules":[{"name":"SocialRadio"}],"symbolKind":"method","title":"addTracks(identifiers:metadata:contextType:contextId:index:completion:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addTracks","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifiers","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","text":"TunedTrackModel","kind":"typeIdentifier"},{"text":"]?, ","kind":"text"},{"text":"contextType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"contextId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"index","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"references":{"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ/addTracks(identifiers:metadata:contextType:contextId:index:completion:)":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addTracks"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifiers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": ["},{"preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","kind":"typeIdentifier","text":"TunedTrackModel"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"contextType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?)"}],"url":"\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)","abstract":[{"text":"Adds additional tracks to the playlist in AutomixIQ at a given index.","type":"text"},{"text":" ","type":"text"},{"text":"Returns an erorr if the index is out of bounds.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTracks(identifiers:metadata:contextType:contextId:index:completion:)","title":"addTracks(identifiers:metadata:contextType:contextId:index:completion:)"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio":{"title":"SocialRadio","role":"collection","abstract":[{"type":"text","text":"Broadcast your playlist, mix, or voice to the world."}],"url":"\/documentation\/socialradio","type":"topic","kind":"symbol","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/TunedTrackModel":{"type":"topic","title":"TunedTrackModel","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TunedTrackModel","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","kind":"symbol","navigatorTitle":[{"text":"TunedTrackModel","kind":"identifier"}],"abstract":[{"type":"text","text":"TunedTrackModel models a track. This metadata is required."}],"url":"\/documentation\/socialradio\/tunedtrackmodel"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ":{"navigatorTitle":[{"text":"AutomixIQ","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ","role":"symbol","type":"topic","abstract":[{"type":"text","text":"AutomixIQ represents the AutomixIQ SDK and exposes all its functionality. It follows a Singleton pattern."}],"title":"AutomixIQ","kind":"symbol","url":"\/documentation\/socialradio\/automixiq","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQ","kind":"identifier"}]}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/metadata\/platforms","value":null,"op":"add"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"path":"\/metadata\/title","value":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","op":"replace"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"addTracksWithIdentifiers:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSArray<NSString *>","kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"text":" *) ","kind":"text"},{"text":"identifiers","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"metadata:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSArray<TunedTrackModel *>","kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"text":" *) ","kind":"text"},{"text":"metadata","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextType:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"contextType","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextId:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","kind":"typeIdentifier","preciseIdentifier":"c:@T@int32_t"},{"text":") ","kind":"text"},{"text":"contextId","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"index:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","kind":"typeIdentifier","preciseIdentifier":"c:@T@int32_t"},{"text":") ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"completion:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^)(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * ","kind":"text"},{"text":"","kind":"internalParam"},{"text":")) ","kind":"text"},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},"op":"replace"},{"path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"identifiers","content":[{"inlineContent":[{"type":"text","text":"The list of track identifiers to add."}],"type":"paragraph"}]},{"name":"metadata","content":[{"type":"paragraph","inlineContent":[{"text":"An array of TunedTrackModel objects you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifiers metadata. Can be nil.","type":"text"}]}]},{"name":"contextType","content":[{"inlineContent":[{"text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc).","type":"text"}],"type":"paragraph"}]},{"name":"contextId","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The id of the source of these tracks, for logging purposes."}]}]},{"name":"index","content":[{"inlineContent":[{"type":"text","text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room."}],"type":"paragraph"}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"Code to be executed upon completing the asynchronous request.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameter error: An error describing a problem that occurred, nil otherwise.","type":"text"}]}]}],"type":"unorderedList"}]}]},"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTracks(identifiers:metadata:contextType:contextId:index:completion:)\/title","value":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTracks(identifiers:metadata:contextType:contextId:index:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/title","value":"TunedTrackModel","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/fragments","value":[{"text":"TunedTrackModel","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/navigatorTitle","value":[{"kind":"identifier","text":"TunedTrackModel"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/title","value":"AutomixIQ","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/fragments","value":[{"text":"AutomixIQ","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/navigatorTitle","value":[{"kind":"identifier","text":"AutomixIQ"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}