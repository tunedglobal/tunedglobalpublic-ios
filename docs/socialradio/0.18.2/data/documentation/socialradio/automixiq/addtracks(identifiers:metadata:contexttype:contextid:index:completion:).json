{"abstract":[{"text":"Adds additional tracks to the playlist in AutomixIQ at a given index.","type":"text"},{"text":" ","type":"text"},{"text":"Returns an erorr if the index is out of bounds.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTracks(identifiers:metadata:contextType:contextId:index:completion:)"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio","doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addTracks"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifiers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel","text":"TunedTrackModel"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"contextType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"contextId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"platforms":["iOS"],"languages":["swift"]}]},{"parameters":[{"name":"identifiers","content":[{"type":"paragraph","inlineContent":[{"text":"The list of track identifiers to add.","type":"text"}]}]},{"name":"metadata","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of TunedTrackModel objects you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifiers metadata. Can be nil."}]}]},{"name":"contextType","content":[{"type":"paragraph","inlineContent":[{"text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc).","type":"text"}]}]},{"name":"contextId","content":[{"inlineContent":[{"type":"text","text":"The id of the source of these tracks, for logging purposes."}],"type":"paragraph"}]},{"name":"index","content":[{"type":"paragraph","inlineContent":[{"text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room.","type":"text"}]}]},{"name":"completion","content":[{"inlineContent":[{"text":"Code to be executed upon completing the asynchronous request.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addTracks","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifiers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"TunedTrackModel","kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel"},{"text":"]?, ","kind":"text"},{"text":"contextType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"contextId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"index","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"role":"symbol","modules":[{"name":"SocialRadio"}],"title":"addTracks(identifiers:metadata:contextType:contextId:index:completion:)","externalID":"c:@M@SocialRadio@objc(cs)AutomixIQ(im)addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","navigatorTitle":[{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"roleHeading":"Instance Method"},"references":{"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ":{"url":"\/documentation\/socialradio\/automixiq","type":"topic","title":"AutomixIQ","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQ","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ","abstract":[{"type":"text","text":"AutomixIQ represents the AutomixIQ SDK and exposes all its functionality. It follows a Singleton pattern."}],"navigatorTitle":[{"text":"AutomixIQ","kind":"identifier"}]},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio":{"type":"topic","abstract":[{"text":"Broadcast your playlist, mix, or voice to the world.","type":"text"}],"kind":"symbol","url":"\/documentation\/socialradio","identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio","role":"collection","title":"SocialRadio"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/TunedTrackModel":{"navigatorTitle":[{"kind":"identifier","text":"TunedTrackModel"}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/TunedTrackModel","type":"topic","abstract":[{"type":"text","text":"TunedTrackModel models a track. This metadata is required."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TunedTrackModel"}],"url":"\/documentation\/socialradio\/tunedtrackmodel","title":"TunedTrackModel","role":"symbol","kind":"symbol"},"doc://org.cocoapods.SocialRadio/documentation/SocialRadio/AutomixIQ/addTracks(identifiers:metadata:contextType:contextId:index:completion:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addTracks","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifiers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"TunedTrackModel","kind":"typeIdentifier","preciseIdentifier":"c:@M@SocialRadio@objc(cs)TunedTrackModel"},{"text":"]?, ","kind":"text"},{"text":"contextType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"contextId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"index","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"kind":"symbol","navigatorTitle":[{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/socialradio\/automixiq\/addtracks(identifiers:metadata:contexttype:contextid:index:completion:)","title":"addTracks(identifiers:metadata:contextType:contextId:index:completion:)","abstract":[{"type":"text","text":"Adds additional tracks to the playlist in AutomixIQ at a given index."},{"type":"text","text":" "},{"type":"text","text":"Returns an erorr if the index is out of bounds."}],"identifier":"doc:\/\/org.cocoapods.SocialRadio\/documentation\/SocialRadio\/AutomixIQ\/addTracks(identifiers:metadata:contextType:contextId:index:completion:)"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"path":"\/metadata\/title","value":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","op":"replace"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"addTracksWithIdentifiers:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSArray<NSString *>","preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"identifiers","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"metadata:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:Q$objc(cs)NSArray","text":"NSArray<TunedTrackModel *>","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"metadata","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextType:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSString","text":"NSString","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"contextType","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"contextId:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","kind":"typeIdentifier","preciseIdentifier":"c:@T@int32_t"},{"text":") ","kind":"text"},{"text":"contextId","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"index:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"int32_t","kind":"typeIdentifier","preciseIdentifier":"c:@T@int32_t"},{"text":") ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"completion:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"text":" * ","kind":"text"},{"text":"","kind":"internalParam"},{"text":")) ","kind":"text"},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}]}]},"op":"replace"},{"path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"identifiers","content":[{"inlineContent":[{"type":"text","text":"The list of track identifiers to add."}],"type":"paragraph"}]},{"name":"metadata","content":[{"inlineContent":[{"text":"An array of TunedTrackModel objects you can pass to the engine so it doesn’t make additional API requests for the corresponding track identifiers metadata. Can be nil.","type":"text"}],"type":"paragraph"}]},{"name":"contextType","content":[{"inlineContent":[{"text":"A string representing the source of these tracks, for logging purposes (‘playlist’, ‘album’, etc).","type":"text"}],"type":"paragraph"}]},{"name":"contextId","content":[{"inlineContent":[{"type":"text","text":"The id of the source of these tracks, for logging purposes."}],"type":"paragraph"}]},{"name":"index","content":[{"type":"paragraph","inlineContent":[{"text":"The index at which this track will be added. If index == 0, it will be the first track of the playlist. If index == playlist.size() the track will be added last. If inbetween, it’ll push tracks from the index onwards back in the playlist to make room.","type":"text"}]}]},{"name":"completion","content":[{"inlineContent":[{"text":"Code to be executed upon completing the asynchronous request.","type":"text"}],"type":"paragraph"}]}]},"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/title","value":"AutomixIQ","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/fragments","value":[{"text":"AutomixIQ","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ\/navigatorTitle","value":[{"text":"AutomixIQ","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/title","value":"TunedTrackModel","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/fragments","value":[{"kind":"identifier","text":"TunedTrackModel"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1TunedTrackModel\/navigatorTitle","value":[{"text":"TunedTrackModel","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTracks(identifiers:metadata:contextType:contextId:index:completion:)\/title","value":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.SocialRadio~1documentation~1SocialRadio~1AutomixIQ~1addTracks(identifiers:metadata:contextType:contextId:index:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"addTracksWithIdentifiers:metadata:contextType:contextId:index:completion:","kind":"identifier"}],"op":"replace"}]}]}