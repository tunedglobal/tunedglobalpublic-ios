{"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/automixiq\/initialising-automixiq-article"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/automixiq\/initialising-automixiq-article"]}],"identifier":{"url":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Initialising-AutomixIQ-article","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Essentials","anchor":"Essentials"},{"inlineContent":[{"text":"This document explains how to integrate AutomixIQ with your application if it is already using Tuned Global’s backend to access tracks and metadata","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Initialization-with-Tuned-Globals-API","type":"heading","text":"Initialization with Tuned Global’s API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to initialise AutomixIQ against Tuned Global’s API and services you need the following:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQStatusObserverDelegate","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tuned Global Store ID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tuned Global Application ID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device Country Code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally you may also implement a "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","isActive":true}]}]}]},{"type":"codeListing","syntax":"swift","code":["func application(_ application: UIApplication, ","                   didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","    \/\/ ...","","    let tunedRestDelegate: TunedRestDelegate = myTunedRestDelegate","    let musicCacheDelegate: AutomixIQMusicCacheDelegate = myMusicCacheDelegate","    let automixIQStatusObserverDelegate: AutomixIQStatusObserverDelegate = myAutomixIQStatusObserverDelegate","    let countryCode: String = myCountryCode \/\/ \"US\" ? \"AU\"?","    let storeId: String = myTunedStoreId","    let applicationId: String = myApplicationId","    let myAPIKey: String = myApplicationKey","    let config = AutomixIQConfig(apiKey: myAPIKey, country: countryCode, storeId: storeId, applicationId: applicationId)","    AutomixIQ.initialise(config: config,","              tunedRestDelegate: tunedRestDelegate,","                         automixIQStatusDelegate: automixIQStatusObserverDelegate,","                         musicCacheDelegate: musicCacheDelegate)","    { error in","        if error != nil {","            \/\/ This means you are forbidden to use the Automix SDK or you have no internet connection.","            return","        }","        \/\/ The Automix SDK public functions can be used from this point onwards :)","    }","","    \/\/ ...","}"]},{"type":"heading","text":"TunedRestDelegate","level":4,"anchor":"TunedRestDelegate"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AutomixIQ requires your applications OAuth2 access & refresh tokens in order to take over playback, provided via"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","type":"reference"}]}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func tunedRestTokenExpired(deviceIdentifierForVendor: String, countryCode: String,","                                      tunedUserId: String?,","                                      oldAccessToken: String?, refreshToken: String?, tokenType: String?,","                                      completion: @escaping (Error?, TunedAuthenticationResponse?, _ tunedUserId: String?) -> Void)","    {","        let response: TunedAuthenticationResponse = TunedAuthenticationResponse.init()","        response.access_token = myAccessToken","        response.token_type = myTokenType","        response.expires_in = myTokenExpiresIn","        response.refresh_token = myRefreshToken","        response.tuned_user_id = myTunedUserId","        completion(response, nil)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"AutomixIQ requires your client’s authenticated device, provided via","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func asyncGetAuthenticatedDevice(deviceIdentifierForVendor: String, completion: @escaping (_ error: Error?, _ tunedDeviceId: String?) -> Void) -> Void {","        \/\/ ...","        let myTunedDeviceId = String(tunedDeviceId)","        return completion(nil, myTunedDeviceId)","    }","    \/\/ ...","}"]},{"items":[{"content":[{"inlineContent":[{"text":"AutomixIQ requires a unique device identifier, generally the identifierForVendor provided by Apple should work: Provided via","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/uniqueDeviceIdentifier()","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func uniqueDeviceIdentifier() -> Void) -> String {","        \/\/ ...","        let myUniqueIdentifier = String(identifierForVendor)","        return myUniqueIdentifier","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"AutomixIQ needs to learn if it should log playback events to Tuned’s backend on your behalf or if you will implement logging yourself: Provided via"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/automaticallyLogPlayback()","type":"reference"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func automaticallyLogPlayback() -> Bool {","        return false","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should you need access to the AutomixIQ log in order to debug your implementation, you can print its output via this delegate as well. You can do that via"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/logAutomixIQMessage(logLevel:message:)"}]}]}]},{"code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func logAutomixIQMessage(logLevel: TunedLogLevel, message: String) {","        #if DEBUG","            NSLog(message)","        #endif","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"text":"AutomixIQMusicCacheDelegate","anchor":"AutomixIQMusicCacheDelegate","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"text":"AutomixIQ can be used for offline playback using cached music data. In order to provide and update cached music data and metadata, set the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","isActive":true},{"type":"text","text":" of AutomixIQ using "},{"isActive":true,"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQ\/setMusicCacheDelegate(_:)","type":"reference"},{"type":"text","text":". This is optional and can be nil."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"This provides hooks to inject cached track audio data and metadata, preventing AutomixIQ from having to request this data from Tuned Global’s API if they are already available. This also enables offline playback when all required data is available on the device"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"This is done via "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getTrackMetadata(trackId:)","isActive":true}],"type":"paragraph"},{"code":["public class MyMusicCacheDelegate: NSObject, AutomixIQMusicCacheDelegate {","    \/\/ ...","    public func getTrackMetadata(trackId: String?) -> TunedTrackModel? {","        \/\/ If I have this track cached, I should be able to tell its metadata","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.metadataForTrack(trackId)","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and "},{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getCachedTrack(trackId:)","isActive":true,"type":"reference"}]},{"type":"codeListing","syntax":"swift","code":["public class MyMusicCacheDelegate: NSObject, AutomixIQMusicCacheDelegate {","    \/\/ ...","    public func getCachedTrack(trackId: String) -> Data? {","        \/\/ If I have this track cached, I should be able to decrypt it and send the data","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.unencryptedDataForTrack(trackId)","    }","    \/\/ ...","}"]},{"items":[{"content":[{"inlineContent":[{"text":"AutomixIQ will download the tracks it needs to play when they are not provided from your cache. It will do so lazily (as required for playback or transition analysis). When a track finishes downloading, AutomixIQ will pass the audio data back to your application to cache if required.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is done via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/trackDownloadCompleted(trackId:data:)"}]},{"type":"codeListing","syntax":"swift","code":["public class MyMusicCacheDelegate: NSObject, AutomixIQMusicCacheDelegate {","    \/\/ ...","    public func trackDownloadCompleted(trackId: String, data: Data) {","        \/\/ Automix SDK finished downloading a track. If I have offline playback or encrypted cache capabilities I should act accordingly here","        return self.cacheTrack(trackId, data:data)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"AutomixIQ will also notify your delegate of download progress."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"This is done via ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/trackDownloadProgressChanged(trackId:progress:)","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public class MyMusicCacheDelegate: NSObject, AutomixIQMusicCacheDelegate {","    \/\/ ...","    public func trackDownloadProgressChanged(trackId: String, progress: Swift.Float) {","        self.updateTrackDownloadProgress(identifier: trackId, progress: progress)","        return","    }","    \/\/ ...","}"]},{"type":"heading","text":"AutomixIQStatusObserverDelegate","anchor":"AutomixIQStatusObserverDelegate","level":4},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQStatusObserverDelegate"},{"text":" is responsible for updating your player’s UI, please refer to ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Updating-custom-player's-UI-article","isActive":true,"type":"reference"}],"type":"paragraph"},{"anchor":"Checking-if-AutomixIQ-is-initialised","type":"heading","text":"Checking if AutomixIQ is initialised","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To check wether AutomixIQ is currently initialised, use"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQ\/initialised()","isActive":true}]}]}]}]}],"abstract":[{"type":"text","text":"How to validate your client and start using the AutomixIQ SDK with Tuned Global APIs"}],"sections":[],"metadata":{"role":"article","title":"Initializing AutomixIQ","roleHeading":"Article","modules":[{"name":"AutomixIQ"}]},"seeAlsoSections":[{"generated":true,"title":"Initializing AutomixIQ for use with Tuned Global’s APIs","identifiers":["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQConfig"],"anchor":"Initializing-AutomixIQ-for-use-with-Tuned-Globals-APIs"}],"references":{"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate/automaticallyLogPlayback()":{"title":"automaticallyLogPlayback()","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/automaticallyLogPlayback()","type":"topic","navigatorTitle":[{"text":"automaticallyLogPlayback","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate\/automaticallylogplayback()","abstract":[{"type":"text","text":"Called by AutomixIQ to learn if it should log playback events to Tuned’s backend on your behalf or if you will implement logging yourself."}],"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"automaticallyLogPlayback","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQConfig":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AutomixIQConfig","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"AutomixIQConfig","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQConfig","title":"AutomixIQConfig","url":"\/documentation\/automixiq\/automixiqconfig","role":"symbol","type":"topic"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQ/initialised()":{"abstract":[{"type":"text","text":"Returns whether or not AutomixIQ is initialised."}],"url":"\/documentation\/automixiq\/automixiq\/initialised()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initialised"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQ\/initialised()","navigatorTitle":[{"text":"initialised","kind":"identifier"}],"role":"symbol","title":"initialised()"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)":{"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate\/tunedresttokenexpired(deviceidentifierforvendor:countrycode:tuneduserid:oldaccesstoken:refreshtoken:tokentype:completion:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","role":"symbol","type":"topic","title":"tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tunedRestTokenExpired","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deviceIdentifierForVendor"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"countryCode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"tunedUserId","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"oldAccessToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"refreshToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"text":"tokenType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"credentials","kind":"internalParam"},{"kind":"text","text":": "},{"text":"TunedAuthenticationResponse","kind":"typeIdentifier","preciseIdentifier":"c:@M@AutomixIQ@objc(cs)TunedAuthenticationResponse"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"tunedUserId","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"navigatorTitle":[{"kind":"identifier","text":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:"}],"abstract":[{"type":"text","text":"Called by AutomixIQ when initialised against a Tuned Global backend or when its access token has expired."}],"required":true},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate/trackDownloadProgressChanged(trackId:progress:)":{"title":"trackDownloadProgressChanged(trackId:progress:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/trackDownloadProgressChanged(trackId:progress:)","type":"topic","navigatorTitle":[{"kind":"identifier","text":"trackDownloadProgressChangedWithTrackId:progress:"}],"kind":"symbol","url":"\/documentation\/automixiq\/automixiqmusiccachedelegate\/trackdownloadprogresschanged(trackid:progress:)","abstract":[{"type":"text","text":"Called by AutomixIQ when a track download progress has changed."}],"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trackDownloadProgressChanged"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"progress"},{"kind":"text","text":": Swift"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Float","preciseIdentifier":"s:Sf"},{"text":")","kind":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate/logAutomixIQMessage(logLevel:message:)":{"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate\/logautomixiqmessage(loglevel:message:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/logAutomixIQMessage(logLevel:message:)","role":"symbol","type":"topic","title":"logAutomixIQMessage(logLevel:message:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logAutomixIQMessage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logLevel"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@AutomixIQ@E@TunedLogLevel","text":"TunedLogLevel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"navigatorTitle":[{"kind":"identifier","text":"logAutomixIQMessageWithLogLevel:message:"}],"abstract":[{"text":"Called by AutomixIQ when it wishes to output a log message","type":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/Updating-custom-player's-UI-article":{"title":"Updating your player UI","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Updating-custom-player's-UI-article","type":"topic","kind":"article","url":"\/documentation\/automixiq\/updating-custom-player's-ui-article","abstract":[{"text":"How to create a UI to reflect the AutomixIQ player","type":"text"}],"role":"article"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)":{"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate\/asyncgetauthenticateddevice(deviceidentifierforvendor:completion:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)","role":"symbol","type":"topic","title":"asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asyncGetAuthenticatedDevice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"deviceIdentifierForVendor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"tunedDeviceId","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:"}],"abstract":[{"text":"Called by AutomixIQ while initialising to give you an opportunity to provide the authenticated device ID or perform device authentication as required.","type":"text"},{"type":"text","text":" "},{"text":"If not implemented, AutomixIQ will proceed to register a device for the logged in user with deviceType: “iPhone”, displayName: “AutomixIQ” and deviceOS: “iOS”.","type":"text"}],"required":true},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate":{"abstract":[{"text":"TunedRestDelegate protocol defines the methods to be implemented that will provide AutomixIQ the credentials and identifiers to Tuned Global’s backend","type":"text"}],"navigatorTitle":[{"text":"TunedRestDelegate","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TunedRestDelegate"}],"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate","title":"TunedRestDelegate","role":"symbol"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQStatusObserverDelegate":{"url":"\/documentation\/automixiq\/automixiqstatusobserverdelegate","type":"topic","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQStatusObserverDelegate","abstract":[{"type":"text","text":"AutomixIQStatusObserverDelegate protocol defines the methods to be implemented with observing the status of AutomixIQ to reflect it on a UI."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQStatusObserverDelegate","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AutomixIQStatusObserverDelegate","kind":"identifier"}],"title":"AutomixIQStatusObserverDelegate"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate/getTrackMetadata(trackId:)":{"title":"getTrackMetadata(trackId:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getTrackMetadata(trackId:)","type":"topic","navigatorTitle":[{"text":"getTrackMetadataWithTrackId:","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/automixiq\/automixiqmusiccachedelegate\/gettrackmetadata(trackid:)","abstract":[{"type":"text","text":"Called by AutomixIQ before attempting to download a tracks metadata to allow the client to provide any cached metadata, return nil if not available."}],"role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTrackMetadata"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?) -> ","kind":"text"},{"text":"TunedTrackModel","preciseIdentifier":"c:@M@AutomixIQ@objc(cs)TunedTrackModel","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQ/setMusicCacheDelegate(_:)":{"kind":"symbol","url":"\/documentation\/automixiq\/automixiq\/setmusiccachedelegate(_:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQ\/setMusicCacheDelegate(_:)","role":"symbol","type":"topic","title":"setMusicCacheDelegate(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMusicCacheDelegate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"AutomixIQMusicCacheDelegate","preciseIdentifier":"c:@M@AutomixIQ@objc(pl)AutomixIQMusicCacheDelegate","kind":"typeIdentifier"},{"text":")","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"setMusicCacheDelegate:"}],"abstract":[{"text":"Adds a new music cache delegate","type":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate/trackDownloadCompleted(trackId:data:)":{"title":"trackDownloadCompleted(trackId:data:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/trackDownloadCompleted(trackId:data:)","type":"topic","navigatorTitle":[{"text":"trackDownloadCompletedWithTrackId:data:","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/automixiq\/automixiqmusiccachedelegate\/trackdownloadcompleted(trackid:data:)","abstract":[{"text":"Called by AutomixIQ when a track has been fully downloaded. This can be used to cache the track locally on the user’s device.","type":"text"}],"role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trackDownloadCompleted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/TunedRestDelegate/uniqueDeviceIdentifier()":{"kind":"symbol","url":"\/documentation\/automixiq\/tunedrestdelegate\/uniquedeviceidentifier()","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate\/uniqueDeviceIdentifier()","role":"symbol","type":"topic","title":"uniqueDeviceIdentifier()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"uniqueDeviceIdentifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"navigatorTitle":[{"text":"uniqueDeviceIdentifier","kind":"identifier"}],"abstract":[{"text":"Called by AutomixIQ to request the unique identifier for the users device as a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"On iOS this is generally the Identifier for Vendor."},{"type":"text","text":" "},{"type":"text","text":"It can be any string as long as it is unique"},{"type":"text","text":" "},{"text":"AutomixIQ will use this string as the UniqueId if it needs to register the device for playback","type":"text"}],"required":true},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate":{"url":"\/documentation\/automixiq\/automixiqmusiccachedelegate","type":"topic","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","abstract":[{"text":"AutomixIQMusicCacheDelegate protocol defines the methods to be implemented with storing and providing cached track data","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}],"title":"AutomixIQMusicCacheDelegate"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ":{"abstract":[{"type":"text","text":"Enable smooth transitions between tracks for a seamlessly beat-matched experience within your iOS music application."}],"type":"topic","kind":"symbol","url":"\/documentation\/automixiq","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","title":"AutomixIQ","role":"collection"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate/getCachedTrack(trackId:)":{"title":"getCachedTrack(trackId:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getCachedTrack(trackId:)","type":"topic","navigatorTitle":[{"kind":"identifier","text":"getCachedTrackWithTrackId:"}],"kind":"symbol","url":"\/documentation\/automixiq\/automixiqmusiccachedelegate\/getcachedtrack(trackid:)","abstract":[{"text":"Called by AutomixIQ before attempting to download a track to allow the client to provide any cached track data, return nil if not available.","type":"text"}],"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCachedTrack"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?"}]}},"variantOverrides":[{"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"path":"\/topicSections","op":"add","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"identifiers":["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/TunedRestDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQConfig"],"generated":true,"title":"Initializing AutomixIQ for use with Tuned Global’s APIs","anchor":"Initializing-AutomixIQ-for-use-with-Tuned-Globals-APIs"}]},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1automaticallyLogPlayback()\/title","op":"replace","value":"automaticallyLogPlayback"},{"op":"replace","value":[{"kind":"text","text":"- "},{"text":"automaticallyLogPlayback","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1automaticallyLogPlayback()\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQConfig\/title","op":"replace","value":"AutomixIQConfig"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQConfig\/fragments","op":"replace","value":[{"kind":"identifier","text":"AutomixIQConfig"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQConfig\/navigatorTitle","value":[{"kind":"identifier","text":"AutomixIQConfig"}]},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQ~1initialised()\/title","op":"replace","value":"initialised"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQ~1initialised()\/fragments","op":"replace","value":[{"text":"+ ","kind":"text"},{"text":"initialised","kind":"identifier"}]},{"op":"replace","value":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)\/title"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)\/fragments"},{"op":"replace","value":"trackDownloadProgressChangedWithTrackId:progress:","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1trackDownloadProgressChanged(trackId:progress:)\/title"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1trackDownloadProgressChanged(trackId:progress:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"trackDownloadProgressChangedWithTrackId:progress:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1logAutomixIQMessage(logLevel:message:)\/title","value":"logAutomixIQMessageWithLogLevel:message:"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"logAutomixIQMessageWithLogLevel:message:"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1logAutomixIQMessage(logLevel:message:)\/fragments","op":"replace"},{"op":"replace","value":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)\/title"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate\/title","op":"replace","value":"TunedRestDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate\/fragments","value":[{"text":"TunedRestDelegate","kind":"identifier"}],"op":"replace"},{"value":[{"text":"TunedRestDelegate","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate\/navigatorTitle"},{"value":"AutomixIQStatusObserverDelegate","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQStatusObserverDelegate\/title"},{"op":"replace","value":[{"text":"AutomixIQStatusObserverDelegate","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQStatusObserverDelegate\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQStatusObserverDelegate\/navigatorTitle","value":[{"kind":"identifier","text":"AutomixIQStatusObserverDelegate"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getTrackMetadata(trackId:)\/title","value":"getTrackMetadataWithTrackId:","op":"replace"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getTrackMetadataWithTrackId:"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getTrackMetadata(trackId:)\/fragments","op":"replace"},{"op":"replace","value":"setMusicCacheDelegate:","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQ~1setMusicCacheDelegate(_:)\/title"},{"op":"replace","value":[{"kind":"text","text":"- "},{"text":"setMusicCacheDelegate:","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQ~1setMusicCacheDelegate(_:)\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1trackDownloadCompleted(trackId:data:)\/title","value":"trackDownloadCompletedWithTrackId:data:","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1trackDownloadCompleted(trackId:data:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"trackDownloadCompletedWithTrackId:data:","kind":"identifier"}],"op":"replace"},{"value":"uniqueDeviceIdentifier","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1uniqueDeviceIdentifier()\/title"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"uniqueDeviceIdentifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1TunedRestDelegate~1uniqueDeviceIdentifier()\/fragments"},{"value":"AutomixIQMusicCacheDelegate","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/title"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/fragments","value":[{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/navigatorTitle","value":[{"kind":"identifier","text":"AutomixIQMusicCacheDelegate"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getCachedTrack(trackId:)\/title","value":"getCachedTrackWithTrackId:"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getCachedTrack(trackId:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getCachedTrackWithTrackId:"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}