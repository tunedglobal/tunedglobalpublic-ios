{"hierarchy":{"paths":[["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate"]]},"identifier":{"url":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getCachedTrack(trackId:)","interfaceLanguage":"swift"},"abstract":[{"text":"Called by AutomixIQ before attempting to download a track to allow the client to provide any cached track data, return nil if not available.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/automixiq\/automixiqmusiccachedelegate\/getcachedtrack(trackid:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/automixiq\/automixiqmusiccachedelegate\/getcachedtrack(trackid:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCachedTrack"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trackId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The id of the track that AutomixIQ is streaming."}],"type":"paragraph"}],"name":"trackId"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The entire unencrypted track data, nil if not available."}]}]},{"kind":"mentions","mentions":["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Initialising-AutomixIQ-article"]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"getCachedTrackWithTrackId:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCachedTrack","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"symbolKind":"method","required":true,"modules":[{"name":"AutomixIQ"}],"roleHeading":"Instance Method","title":"getCachedTrack(trackId:)","externalID":"c:@M@AutomixIQ@objc(pl)AutomixIQMusicCacheDelegate(im)getCachedTrackWithTrackId:"},"references":{"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/Initialising-AutomixIQ-article":{"abstract":[{"type":"text","text":"How to validate your client and start using the AutomixIQ SDK with Tuned Global APIs"}],"type":"topic","url":"\/documentation\/automixiq\/initialising-automixiq-article","kind":"article","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Initialising-AutomixIQ-article","role":"article","title":"Initializing AutomixIQ"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate":{"title":"AutomixIQMusicCacheDelegate","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}],"url":"\/documentation\/automixiq\/automixiqmusiccachedelegate","navigatorTitle":[{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"AutomixIQMusicCacheDelegate protocol defines the methods to be implemented with storing and providing cached track data","type":"text"}],"kind":"symbol"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ":{"kind":"symbol","url":"\/documentation\/automixiq","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","abstract":[{"type":"text","text":"Enable smooth transitions between tracks for a seamlessly beat-matched experience within your iOS music application."}],"type":"topic","role":"collection","title":"AutomixIQ"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixIQMusicCacheDelegate/getCachedTrack(trackId:)":{"kind":"symbol","required":true,"navigatorTitle":[{"kind":"identifier","text":"getCachedTrackWithTrackId:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCachedTrack","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Called by AutomixIQ before attempting to download a track to allow the client to provide any cached track data, return nil if not available.","type":"text"}],"title":"getCachedTrack(trackId:)","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixIQMusicCacheDelegate\/getCachedTrack(trackId:)","url":"\/documentation\/automixiq\/automixiqmusiccachedelegate\/getcachedtrack(trackid:)","role":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"add","path":"\/metadata\/platforms","value":null},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"getCachedTrackWithTrackId:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"getCachedTrackWithTrackId:","kind":"identifier"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"getCachedTrackWithTrackId:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSString","text":"NSString","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"trackId"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"}},{"path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"trackId","content":[{"type":"paragraph","inlineContent":[{"text":"The id of the track that AutomixIQ is streaming.","type":"text"}]}]}]},"op":"replace"},{"op":"replace","path":"\/primaryContentSections\/2","value":{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"The entire unencrypted track data, nil if not available.","type":"text"}]}]}},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/title","value":"AutomixIQMusicCacheDelegate"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/fragments","value":[{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate\/navigatorTitle","value":[{"text":"AutomixIQMusicCacheDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getCachedTrack(trackId:)\/title","value":"getCachedTrackWithTrackId:"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixIQMusicCacheDelegate~1getCachedTrack(trackId:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getCachedTrackWithTrackId:"}]}]}]}